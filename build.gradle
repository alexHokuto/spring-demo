plugins {
    id 'org.springframework.boot' version '1.4.3.RELEASE'
    id 'java'
    id 'eclipse'
}


archivesBaseName = 'spring-demo'
version = '0.0.1-SNAPSHOT'

repositories {
    jcenter()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
}


apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: "base"
apply plugin: "maven"
apply plugin: "maven-publish"

def repoUrl = "http://192.168.1.222:8081/repository/SAMPLE-SNAP/"


Date buildTimeAndDate = new Date()
ext {
  buildDate = new SimpleDateFormat('dd-MMM-yyyy').format(buildTimeAndDate)
  buildTime = new SimpleDateFormat('hh:mm aa').format(buildTimeAndDate)
  theVersion = version
}

def jarManifestAttributes = [
  'Built-By'              : System.properties['user.name'],
  'Created-By'            : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.getProperty('java.vm.version')})'",
  'Build-Date'            : buildDate,
  'Build-Time'            : buildTime,
  'Implementation-Version': theVersion
]

jar {
  manifest {
    attributes(jarManifestAttributes)
  }
}

// Proceso de PublicaciÃ³n:
task sourceJar(type: Jar) {
  from sourceSets.main.allJava
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java

      artifact sourceJar {
        classifier 'sources'
      }
      /*artifact javadocJar {
        classifier "javadoc"
      }*/
      //Pone las dependencias en scope 'compile'
      pom.withXml {
        asNode().dependencies.'*'.findAll() {
          it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
            dep.name == it.artifactId.text()
          }
        }.each() {
          it.scope*.value = 'compile'
        }
      }
    }
  }
}

def e = System.getenv()
def bamboo = e['bamboo_buildKey']

publishing {
  repositories {
    maven {
      def elRepo = 'http://192.168.1.222:8081/repository/SAMPLE-SNAP/'
      url elRepo
      credentials {
        username 'admin'
        password 'admin123'
      }
    }
  }
}





